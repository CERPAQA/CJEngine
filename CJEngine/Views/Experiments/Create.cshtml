@model CJEngine.ViewModel.CreateExperimentViewModel;
@{
    ViewData["Title"] = "Create";
}

<h1>Create New Experiment</h1>

<hr />
<div class="row">
    <div class="col-md-4">

        <form asp-action="Create">
            <!--<div asp-validation-summary="ModelOnly" class="text-danger"></div>-->
            <div class="form-group">
                <label asp-for="Experiment.Name" class="control-label"></label>
                <input asp-for="Experiment.Name" class="form-control" />
                <span asp-validation-for="Experiment.Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Experiment.Description" class="control-label"></label>
                <input asp-for="Experiment.Description" class="form-control" />
                <span asp-validation-for="Experiment.Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Experiment.ExperimentParameters" class="control-label"></label>
                <select name="Parameters" onchange="java_script_:show(this.options[this.selectedIndex].value)"
                        asp-for="Experiment.ExperimentParameters" class="form-control">
                    <option value="New">Create New</option>
                    @foreach (var item in Model.ExperimentParametersList)
                    {
                        <option >@item.Description</option>
                    }
                </select>
            </div>
            <div id="parameters">
                <br />
                <partial name="~/Views/ExperimentParameters/_CreateParams.cshtml" />
            </div>
            <div>
                <br />
                <partial name="~/Views/Artefacts/_IndexArtefacts.cshtml" />
            </div>

            <div class="form-group">
                <input type="submit" value="Create Experiment" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

<!--a href="#popupMap" data-rel="popup" data-position-to="window" class="ui-btn ui-corner-all ui-shadow ui-btn-inline">Open Map</a>
<div data-role="popup" id="popupMap" data-overlay-theme="a" data-theme="a" data-corners="false" data-tolerance="15,15">
    <a href="#" data-rel="back" class="ui-btn ui-btn-b ui-corner-all ui-shadow ui-btn-a ui-icon-delete ui-btn-icon-notext ui-btn-right">Close</a!-->

<script type="text/javascript">
    //function handleSelect(elm) {
    //    if (elm.value == "/ExperimentParameters/Create") {
    //        window.location = elm.value;
    //    }
    //}

    function show(val) {
        if (val == "New") {
            parameters.style.display= 'inline-block';
        }
        else {
            parameters.style.display = 'none';
        }
    }


    // popup examples
    $(document).on("pagecreate", function () {
        // The window width and height are decreased by 30 to take the tolerance of 15 pixels at each side into account
        function scale(width, height, padding, border) {
            var scrWidth = $(window).width() - 30,
                scrHeight = $(window).height() - 30,
                ifrPadding = 2 * padding,
                ifrBorder = 2 * border,
                ifrWidth = width + ifrPadding + ifrBorder,
                ifrHeight = height + ifrPadding + ifrBorder,
                h, w;
            if (ifrWidth < scrWidth && ifrHeight < scrHeight) {
                w = ifrWidth;
                h = ifrHeight;
            } else if ((ifrWidth / scrWidth) > (ifrHeight / scrHeight)) {
                w = scrWidth;
                h = (scrWidth / ifrWidth) * ifrHeight;
            } else {
                h = scrHeight;
                w = (scrHeight / ifrHeight) * ifrWidth;
            }
            return {
                'width': w - (ifrPadding + ifrBorder),
                'height': h - (ifrPadding + ifrBorder)
            };
        };
        $(".ui-popup iframe")
            .attr("width", 0)
            .attr("height", "auto");
        $("#popupVideo").on({
            popupbeforeposition: function () {
                // call our custom function scale() to get the width and height
                var size = scale(497, 298, 15, 1),
                    w = size.width,
                    h = size.height;
                $("#popupVideo iframe")
                    .attr("width", w)
                    .attr("height", h);
            },
            popupafterclose: function () {
                $("#popupVideo iframe")
                    .attr("width", 0)
                    .attr("height", 0);
            }
        });
    });
</script>

<!--   <div class="form-group">
                    <label class="control-label"></label>
                    @@Html.LabelFor(m => m.selected)
                    @@Html.DropDownListFor(m => m.artefact, (IEnumerable<SelectListItem>)ViewData["artefacts"], "Select Artefacts")
</div>-->
